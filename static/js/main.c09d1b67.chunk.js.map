{"version":3,"sources":["Post.js","firebase.js","TweetBox.js","Feed.js","SidebarOptions.js","Sidebar.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["Post","forwardRef","ref","displayName","username","verified","text","image","avatar","className","Avatar","src","VerifiedUser","alt","ChatBubbleOutlineOutlined","fontSize","Repeat","FavoriteBorderRounded","Publish","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","settweetMessage","tweetImg","settweetImg","value","type","placeholder","onChange","e","target","Button","onClick","preventDefault","collection","add","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","SidebarOptions","active","Icon","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","variant","fullWidth","Widgets","tweetId","sourceType","screenName","options","height","url","via","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c09d1b67.chunk.js","sourcesContent":["import { Avatar } from '@material-ui/core'\r\nimport { ChatBubbleOutlineOutlined, FavoriteBorderRounded, Publish, Repeat, VerifiedUser } from '@material-ui/icons'\r\nimport React, {forwardRef} from 'react'\r\nimport './Post.css'\r\n\r\n\r\n\r\nconst Post=forwardRef(({displayName, username, verified, text, image, avatar}, ref) =>{\r\n    return (\r\n        <div className=\"post\" ref={ref}>\r\n            <div className=\"post__avatar\">\r\n                <Avatar src={avatar}/>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <div className=\"post__header\">\r\n                    <div className=\"post__headerText\">\r\n                        <h3>\r\n                            {displayName} <span className=\"post__headerSpecial\">\r\n                                {verified && <VerifiedUser className=\"post__badge\"/>}\r\n                                @{username}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"post__headerDescription\">\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                <img src={image} alt=\"error\"/>\r\n                <div className=\"post__footer\">\r\n                    <ChatBubbleOutlineOutlined fontSize=\"small\"/>\r\n                    <Repeat fontSize=\"small\"/>\r\n                    <FavoriteBorderRounded fontSize=\"small\"/>\r\n                    <Publish fontSize=\"small\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n);\r\n\r\nexport default Post\r\n","import firebase from 'firebase'\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCIgklJGM_AJTPe8bblfuGpH-lGveTuiUc\",\r\n    authDomain: \"twitter-clone-da879.firebaseapp.com\",\r\n    projectId: \"twitter-clone-da879\",\r\n    storageBucket: \"twitter-clone-da879.appspot.com\",\r\n    messagingSenderId: \"601664836977\",\r\n    appId: \"1:601664836977:web:f4e95fce5f8ca879fe92d0\",\r\n    measurementId: \"G-224QR2G3T0\"\r\n  };\r\n\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig);\r\n\r\n  const db= firebaseApp.firestore();\r\n\r\n  export default db;\r\n","import { Avatar, Button } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport './TweetBox.css'\r\nimport db from \"./firebase\"\r\n\r\nfunction TweetBox() {\r\n\r\n    const [tweetMessage, settweetMessage] = useState(\"\");\r\n    const [tweetImg, settweetImg]= useState(\"\");\r\n\r\n    const setTweet = (e) =>{\r\n        e.preventDefault();\r\n\r\n        db.collection(\"posts\").add({\r\n            displayName:\"Utkarsh Chaudhary\",\r\n            username:\"matt\",\r\n            verified:true,\r\n            text:tweetMessage,\r\n            image:tweetImg,\r\n            avatar:'https://picsum.photos/id/270/200/300'\r\n        });\r\n        settweetMessage(\"\");\r\n        settweetImg(\"\")\r\n    };\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            <form>\r\n                <div className=\"tweetBox__input\">\r\n                    <Avatar src=\"https://picsum.photos/seed/picsum/200/300\"/>\r\n                    <input \r\n                    value={tweetMessage} \r\n                    type=\"text\" \r\n                    placeholder=\"What's happening?\" \r\n                    onChange={(e)=> settweetMessage(e.target.value)}\r\n                    />\r\n                </div>\r\n                <input\r\n                onChange={(e)=> settweetImg(e.target.value)} \r\n                value={tweetImg}\r\n                className=\"tweetBox__imageinput\" \r\n                type=\"text\" \r\n                placeholder=\"Optional: Enter image URL\" \r\n                />\r\n                <Button onClick={setTweet} type=\"submit\" className=\"tweetBox__tweetButton\">Tweet</Button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetBox\r\n","import React,{useState,useEffect} from 'react'\r\nimport './Feed.css'\r\nimport Post from './Post'\r\nimport TweetBox from './TweetBox'\r\nimport db from './firebase'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts]=useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").onSnapshot((snapshot) => {\r\n            setPosts(snapshot.docs.map((doc) => doc.data()))\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            {/* {header} */}\r\n            <div className='feed__header'>\r\n                <h2>Home</h2>\r\n            </div>\r\n\r\n            {/* {tweetbox} */}\r\n            <TweetBox/>\r\n            <FlipMove>\r\n                {posts.map((post) => {\r\n                    return(\r\n                    <Post \r\n                    key={post.text}\r\n                    displayName={post.displayName} \r\n                    username={post.username}\r\n                    verified={post.verified}\r\n                    text={post.text}\r\n                    avatar={post.avatar}\r\n                    image={post.image}\r\n                    />\r\n                    )\r\n                })}\r\n            </FlipMove>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './SidebarOptions.css'\r\n\r\nfunction SidebarOptions({ active, text, Icon}) {\r\n    return (\r\n        <div className={`sidebarOption ${active && 'sidebarOption--active'}`}>\r\n            <Icon />\r\n            <h2>{text}</h2> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOptions;  \r\n","import React from 'react'\r\nimport './sidebar.css'\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SidebarOptions from './SidebarOptions';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className='sidebar'>\r\n            <TwitterIcon className='sidebar_twittericon'/>\r\n\r\n            <SidebarOptions active Icon={HomeIcon} text='Home'/>\r\n            <SidebarOptions Icon={SearchIcon} text=\"Explore\"/>\r\n            <SidebarOptions Icon={NotificationsNoneIcon } text=\"Notification\"/>\r\n            <SidebarOptions Icon={MailOutlineIcon} text='Messgaes'/>\r\n            <SidebarOptions Icon={BookmarkBorderIcon} text='Bookmarks'/>\r\n            <SidebarOptions Icon={ListAltIcon} text='Lists'/>\r\n            <SidebarOptions Icon={PermIdentityIcon} text='Profile'/>\r\n            <SidebarOptions Icon={MoreHorizIcon} text='More'/>\r\n\r\n            <Button variant='outlined' className='sidebar_tweet' fullWidth>Tweet</Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { Search } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport'./Widgets.css'\r\nimport {TwitterTweetEmbed, TwitterShareButton, TwitterTimelineEmbed} from \"react-twitter-embed\"\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className='widgets'>\r\n            <div className=\"widgets__input\">\r\n                <Search className=\"widgets__searchIcon\"/>\r\n                <input type=\"text\" placeholder=\"Search Twitter\" />\r\n            </div>\r\n\r\n            <div className=\"widgets__widgetContainer\">\r\n                <h2>What's happening</h2>\r\n                <TwitterTweetEmbed tweetId={\"1394765564334149632\"}/>\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"profile\"\r\n                    screenName=\"maroon5\"\r\n                    options={{height:400}}\r\n                    className=\"timeline\"\r\n                />\r\n                <TwitterShareButton\r\n                url={\"www.google.com\"}\r\n                options={{text:\"reactjs-is-awesom\", via:\"maroon5\"}}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import './App.css';\nimport Feed from './Feed';\nimport Sidebar from './Sidebar';\nimport Widgets from './Widgets';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar /> \n\n      <Feed />\n      {/* {widget} */}\n      <Widgets/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}